<?xml version="1.0" encoding="UTF-8"?>
<!-- JPA 버전을 의미 -->
<persistence version="2.2"
	 xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">
	 
	<!-- persistence-unit는 보통 DB하나당 하나를 만든다.  : 기본 예제용 -->
 	<persistence-unit name="hello">	<!-- JPA의 이름 -->
		 <properties>
			 <!-- 필수 속성 : DB 접근 정보 -->
			 <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
			 <property name="javax.persistence.jdbc.user" value="sa"/>
			 <property name="javax.persistence.jdbc.password" value=""/>
			 <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/h2_DB_test"/>
			 <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
<!-- 			 <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5Dialect"/> -->
<!-- 			 <property name="hibernate.dialect" value="org.hibernate.dialect.Oracle12cDialect"/> -->
			 <!-- 
			 **중요 : JPA에서 hibernate.dialect 속성은 특정 DB(방언)를 사용한다고 알려주는 속성이다.  
			 	- JPA는 특정 DB에 종속적이지 않게 만들었다.
			 	- SQL표준 문법을 지키지 않는 특정 DB에 종속된 문법을 데이터베이스 방언이라 한다.
			 	- JPA 특정 DB에 종속적이지 않게 설계했기 때문에 개발자는 사용중인 DB의 방언을 JPA에게 알려주어야한다.
			 	- 어떤 DB를 사용하는지 알려주는 속성이 hibernate.dialect 이다.
			 -->
			 
			 <!-- hibernate에서 제공하는 옵션 -->
			 <property name="hibernate.show_sql" value="true"/>				<!-- 쿼리를 한줄로 출력. -->
			 <property name="hibernate.format_sql" value="true"/>			<!-- 출력된 쿼리를 보기 좋게 보여준다. -->
			 <property name="hibernate.use_sql_comments" value="true"/>		<!-- JPA 쿼리 출력시 쿼리를 설명하는 주석 출력 -->
			 <property name="hibernate.jdbc.batch_size" value="10"/>		<!-- 쓰기 지연 SQL저장소에서 사용할 버퍼의 크기 지정 == DB로 한번에 보낼 SQL 개수를 지정 -->
			 
			 <!-- 데이터베이스 스키마 자동생성 : 앱이 로딩될때 테이블을 DB 방언에 맞게 자동으로 생성해 주는 기능(개발시에만 사용) -->
			 <property name="hibernate.hbm2ddl.auto" value="update"/> 		<!-- 앱 로딩시 JPA가 관리하는 엔티티 DROP + CREATE  -->
			 <!-- 
			    <property name="hibernate.hbm2ddl.auto" value="create" /> 	       앱 로딩시 JPA가 관리하는 엔티티 DROP + CREATE  
			    <property name="hibernate.hbm2ddl.auto" value="create-drop" />  앱 로딩시 JPA가 관리하는 엔티티 DROP + CREATE, 종료시 테이블 DROP 
			    <property name="hibernate.hbm2ddl.auto" value="update" />       테이블 DROP없이 특정 칼럼을 추가하고 싶을 때 변경된 칼럼을 추가한다.
			    <property name="hibernate.hbm2ddl.auto" value="validate" />     앱이 구동시 엔티티와 테이블이 정상 매핑되었는지만 확인
			    <property name="hibernate.hbm2ddl.auto" value="none" />     	사용하지 않는다는 명시적 설정 -> 사실상 안에 아무거나 적어도된다. 작동하지 않는다.
			  -->
 		</properties>
	</persistence-unit>
	
	
	<!-- 실전예제01 용-->
	<persistence-unit name="jpaShop">	
		 <properties>
			 <!-- 필수 속성 : DB 접근 정보 -->
			 <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
			 <property name="javax.persistence.jdbc.user" value="sa"/>
			 <property name="javax.persistence.jdbc.password" value=""/>
			 <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/jpaShop"/>
			 <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
			 
			 <!-- hibernate에서 제공하는 옵션 -->
			 <property name="hibernate.show_sql" value="true"/>				<!-- 쿼리를 한줄로 출력. -->
			 <property name="hibernate.format_sql" value="true"/>			<!-- 출력된 쿼리를 보기 좋게 보여준다. -->
			 <property name="hibernate.use_sql_comments" value="true"/>		<!-- JPA 쿼리 출력시 쿼리를 설명하는 주석 출력 -->
			 <property name="hibernate.jdbc.batch_size" value="10"/>		<!-- 쓰기 지연 SQL저장소에서 사용할 버퍼의 크기 지정 == DB로 한번에 보낼 SQL 개수를 지정 -->
			 
			 <!-- 데이터베이스 스키마 자동생성 : 앱이 로딩될때 테이블을 DB 방언에 맞게 자동으로 생성해 주는 기능(개발시에만 사용) -->
			 <property name="hibernate.hbm2ddl.auto" value="update"/> 		<!-- 앱 로딩시 JPA가 관리하는 엔티티 DROP + CREATE  -->
 		</properties>
	</persistence-unit>
	
</persistence>